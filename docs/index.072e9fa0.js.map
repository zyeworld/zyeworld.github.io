{"mappings":"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","sources":["<anon>","src/_components/nav/nav.ts"],"sourcesContent":["// implements pattern lock feature into nav\n// a lot of easter eggs may be added in the future here...\n(function() {\n    /* elements & config */ const canvas = document.getElementById(\"nav-pattern\");\n    const ctx = canvas.getContext(\"2d\");\n    const pattern_dot_container = document.querySelector(\"#nav-dots > ol\");\n    const pattern_dots = pattern_dot_container.children;\n    const config = {\n        classes: {\n            dot_focus: \"focus\",\n            dot_wrong: \"wrong\",\n            nav_small: \"small\"\n        },\n        colors: {\n            default: \"white\",\n            wrong: \"rgb(255, 140, 140)\"\n        },\n        pattern: {\n            three_dot_lines: [\n                /* list of 3 dots that create a line */ [\n                    0,\n                    1,\n                    2\n                ],\n                [\n                    3,\n                    4,\n                    5\n                ],\n                [\n                    6,\n                    7,\n                    8\n                ],\n                [\n                    0,\n                    3,\n                    6\n                ],\n                [\n                    1,\n                    4,\n                    7\n                ],\n                [\n                    2,\n                    5,\n                    8\n                ],\n                [\n                    0,\n                    4,\n                    8\n                ],\n                [\n                    2,\n                    4,\n                    6\n                ]\n            ],\n            valid_patterns: [\n                /* use [1-9] here instead of [0-8] */ {\n                    valid_pattern: 541263789,\n                    link: \"/projects\"\n                },\n                {\n                    valid_pattern: 183526794,\n                    link: \"/projects/pattern\"\n                },\n                {\n                    valid_pattern: 4123658,\n                    link: \"/about\"\n                },\n                {\n                    valid_pattern: 8563214,\n                    link: \"/about\"\n                }\n            ],\n            wrong_timeout_ms: 1000\n        }\n    };\n    /* ******************************************************* */ /* variables */ /* pattern can be drawn only if enabled */ let enabled = true;\n    let wrong_timeoutId = null;\n    const dot_xs = [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0\n    ];\n    const dot_ys = [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0\n    ];\n    let dot_r = 0;\n    let dot_under_mouse = null;\n    let line_width = 0;\n    let line_color = config.colors.default;\n    let mousedown = false;\n    let mouse_x = 0;\n    let mouse_y = 0;\n    const pattern = [];\n    const is_dot_used = [\n        false,\n        false,\n        false,\n        false,\n        false,\n        false,\n        false,\n        false,\n        false\n    ];\n    /* ******************************************************* */ /* handling dots */ function update_dots() {\n        let rect = pattern_dot_container.getBoundingClientRect();\n        let center_x = Math.floor((rect.left + rect.right) / 2);\n        let center_y = Math.floor((rect.top + rect.bottom) / 2);\n        /* x: 1 2 3 1 2 3 1 2 3\n       y: 1 1 1 2 2 2 3 3 3 */ for(let i = 0; i < 3; i++){\n            dot_xs[3 * i] = rect.left;\n            dot_xs[3 * i + 1] = center_x;\n            dot_xs[3 * i + 2] = rect.right;\n            dot_ys[i] = rect.top;\n            dot_ys[3 + i] = center_y;\n            dot_ys[6 + i] = rect.bottom;\n        }\n        dot_r = Math.floor((rect.right - rect.left) * 0.18);\n        line_width = Math.floor((rect.right - rect.left) * 0.03);\n    }\n    function toggle_dot_focus(dot = 0, on = true) {\n        if (on) pattern_dots[dot].classList.add(config.classes.dot_focus);\n        else pattern_dots[dot].classList.remove(config.classes.dot_focus);\n    }\n    function toggle_dot_wrong(dot = 0, on = true) {\n        if (on) /* could get animated in future (flicker?) */ pattern_dots[dot].classList.add(config.classes.dot_wrong);\n        else pattern_dots[dot].classList.remove(config.classes.dot_wrong);\n    }\n    function coords_to_dot(x = 0, y = 0) {\n        for(let dot = 0; dot < 9; dot++){\n            let dx = x - dot_xs[dot];\n            let dy = y - dot_ys[dot];\n            if (dx * dx + dy * dy < dot_r * dot_r) return dot;\n        }\n        return null;\n    }\n    /* ******************************************************* */ /* drawing functions */ function draw_pattern() {\n        if (pattern.length <= 1) return;\n        ctx.beginPath();\n        ctx.moveTo(dot_xs[pattern[0]], dot_ys[pattern[0]]);\n        for(let i = 1; i < pattern.length; i++)ctx.lineTo(dot_xs[pattern[i]], dot_ys[pattern[i]]);\n        ctx.stroke();\n    }\n    function draw_line_to_mouse() {\n        if (pattern.length === 0) return;\n        ctx.beginPath();\n        let dot_last = pattern[pattern.length - 1];\n        ctx.moveTo(dot_xs[dot_last], dot_ys[dot_last]);\n        ctx.lineTo(mouse_x, mouse_y);\n        ctx.stroke();\n    }\n    /* canvas animation step */ function draw() {\n        ctx.clearRect(0, 0, canvas.offsetWidth, canvas.offsetHeight);\n        ctx.lineWidth = line_width;\n        ctx.strokeStyle = line_color;\n        ctx.lineCap = \"round\";\n        ctx.lineJoin = \"round\";\n        draw_pattern();\n        if (mousedown) draw_line_to_mouse();\n    }\n    /* ******************************************************* */ /* handling the pattern */ function reset_pattern() {\n        is_dot_used.fill(false);\n        pattern.splice(0, pattern.length);\n        for(let i = 0; i < 9; i++){\n            if (i !== dot_under_mouse) toggle_dot_focus(i, false);\n            toggle_dot_wrong(i, false);\n        }\n        line_color = config.colors.default;\n        /* cancel 'wrong pattern' timeout */ if (wrong_timeoutId !== null) {\n            clearTimeout(wrong_timeoutId);\n            wrong_timeoutId = null;\n        }\n    }\n    /* wrongenize the pattern */ function wrongify_pattern() {\n        for(let i = 0; i < 9; i++)if (is_dot_used[i]) toggle_dot_wrong(i, true);\n        line_color = config.colors.wrong;\n    }\n    function pattern_add(dot = 0) {\n        if (is_dot_used[dot]) return;\n        if (pattern.length > 0) {\n            /* see if current and previous dot are endpoints of a three_dot_line */ let dot_prev = pattern[pattern.length - 1];\n            for (let line of config.pattern.three_dot_lines){\n                if (is_dot_used[line[1]]) continue;\n                if (dot === line[0] && dot_prev === line[2] || dot === line[2] && dot_prev === line[0]) {\n                    is_dot_used[line[1]] = true;\n                    pattern.push(line[1]);\n                    toggle_dot_focus(line[1], true);\n                    break;\n                }\n            }\n        }\n        is_dot_used[dot] = true;\n        pattern.push(dot);\n        toggle_dot_focus(dot, true);\n    }\n    function pattern_to_number() {\n        /* [0, 1, 6, 4] => 1275 */ return pattern.reduce((total, cur)=>total * 10 + (cur + 1), 0);\n    }\n    function pattern_to_link() {\n        let pattern_code = pattern_to_number();\n        for (let { valid_pattern, link } of config.pattern.valid_patterns){\n            if (pattern_code === valid_pattern) return link;\n        }\n        return null;\n    }\n    /* ******************************************************* */ /* handling mouse */ function on_mousedown(x = 0, y = 0) {\n        if (!enabled || mousedown) return;\n        mouse_x = x;\n        mouse_y = y;\n        dot_under_mouse = coords_to_dot(mouse_x, mouse_y);\n        reset_pattern();\n        if (dot_under_mouse !== null) {\n            mousedown = true;\n            pattern_add(dot_under_mouse);\n        }\n        window.requestAnimationFrame(draw);\n    }\n    function on_mousemove(x = 0, y = 0) {\n        if (!enabled) return;\n        mouse_x = x;\n        mouse_y = y;\n        let dot = coords_to_dot(mouse_x, mouse_y);\n        /* if mouse leaves dot: shrink */ if (dot_under_mouse !== null && dot_under_mouse !== dot) {\n            if (!is_dot_used[dot_under_mouse]) toggle_dot_focus(dot_under_mouse, false);\n            dot_under_mouse = null;\n        }\n        /* if mouse enters dot: enlarge */ if (dot !== null && dot_under_mouse === null) {\n            toggle_dot_focus(dot, true);\n            if (mousedown && !is_dot_used[dot]) pattern_add(dot);\n            dot_under_mouse = dot;\n        }\n        if (mousedown) window.requestAnimationFrame(draw);\n    }\n    function on_mouseup() {\n        if (!enabled || !mousedown) return;\n        mousedown = false;\n        /* ignore 'single dot patterns' */ if (pattern.length <= 1) {\n            reset_pattern();\n            window.requestAnimationFrame(draw);\n            return;\n        }\n        let link = pattern_to_link();\n        if (link === null) {\n            wrongify_pattern();\n            wrong_timeoutId = setTimeout(()=>{\n                reset_pattern();\n                window.requestAnimationFrame(draw);\n            }, config.pattern.wrong_timeout_ms);\n        } else /* move to href */ window.location.href = link;\n        window.requestAnimationFrame(draw);\n    }\n    /* ******************************************************* */ /* event listeners */ canvas.addEventListener(\"mousedown\", function(e) {\n        on_mousedown(e.offsetX, e.offsetY);\n    });\n    canvas.addEventListener(\"touchstart\", function(e) {\n        let touches = e.changedTouches;\n        let touch = touches[touches.length - 1];\n        on_mousedown(touch.clientX, touch.clientY);\n    });\n    canvas.addEventListener(\"mousemove\", function(e) {\n        on_mousemove(e.offsetX, e.offsetY);\n    });\n    canvas.addEventListener(\"touchmove\", function(e) {\n        if (!mousedown) return; /* no need to enlarge dots if not touched */ \n        e.preventDefault();\n        let touches = e.changedTouches;\n        let touch = touches[touches.length - 1];\n        on_mousemove(touch.clientX, touch.clientY);\n    });\n    canvas.addEventListener(\"mouseup\", function(e) {\n        on_mouseup();\n    });\n    canvas.addEventListener(\"touchend\", function(e) {\n        on_mouseup();\n    });\n    /* ******************************************************* */ window.addEventListener(\"load\", function(e) {\n        canvas.setAttribute(\"width\", canvas.offsetWidth.toString());\n        canvas.setAttribute(\"height\", canvas.offsetHeight.toString());\n        update_dots();\n        window.requestAnimationFrame(draw);\n    });\n    window.addEventListener(\"resize\", function(e) {\n        canvas.setAttribute(\"width\", canvas.offsetWidth.toString());\n        canvas.setAttribute(\"height\", canvas.offsetHeight.toString());\n        update_dots();\n        window.requestAnimationFrame(draw);\n    });\n})();\n\n//# sourceMappingURL=index.072e9fa0.js.map\n","// implements pattern lock feature into nav\n// a lot of easter eggs may be added in the future here...\n\n(function () {\n  /* elements & config */\n  const canvas = document.getElementById(\"nav-pattern\") as HTMLCanvasElement;\n  const ctx = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n  const pattern_dot_container = document.querySelector(\n    \"#nav-dots > ol\"\n  ) as Element;\n  const pattern_dots = pattern_dot_container.children;\n\n  const config = {\n    classes: {\n      dot_focus: \"focus\",\n      dot_wrong: \"wrong\",\n      nav_small: \"small\"\n    },\n    colors: {\n      default: \"white\",\n      wrong: \"rgb(255, 140, 140)\"\n    },\n    pattern: {\n      three_dot_lines: [\n        /* list of 3 dots that create a line */\n        [0, 1, 2] /* → */,\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6] /* ↓ */,\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8] /* ↘︎ */,\n        [2, 4, 6] /* ↙︎ */\n      ],\n      valid_patterns: [\n        /* use [1-9] here instead of [0-8] */\n        { valid_pattern: 541263789, link: \"/projects\" },\n        { valid_pattern: 183526794, link: \"/projects/pattern\" },\n        { valid_pattern: 4123658, link: \"/about\" },\n        { valid_pattern: 8563214, link: \"/about\" }\n      ],\n      wrong_timeout_ms: 1000\n    }\n  };\n\n  /* ******************************************************* */\n  /* variables */\n\n  /* pattern can be drawn only if enabled */\n  let enabled: boolean = true;\n  let wrong_timeoutId: number | null = null;\n\n  const dot_xs: number[] = [0, 0, 0, 0, 0, 0, 0, 0, 0];\n  const dot_ys: number[] = [0, 0, 0, 0, 0, 0, 0, 0, 0];\n  let dot_r: number = 0;\n  let dot_under_mouse: number | null = null;\n\n  let line_width: number = 0;\n  let line_color: string = config.colors.default;\n\n  let mousedown: boolean = false;\n  let mouse_x: number = 0;\n  let mouse_y: number = 0;\n\n  const pattern: number[] = [];\n\n  const is_dot_used: boolean[] = [\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n    false\n  ];\n\n  /* ******************************************************* */\n  /* handling dots */\n\n  function update_dots(): void {\n    let rect = pattern_dot_container.getBoundingClientRect();\n    let center_x = Math.floor((rect.left + rect.right) / 2);\n    let center_y = Math.floor((rect.top + rect.bottom) / 2);\n\n    /* x: 1 2 3 1 2 3 1 2 3\n       y: 1 1 1 2 2 2 3 3 3 */\n    for (let i = 0; i < 3; i++) {\n      dot_xs[3 * i] = rect.left;\n      dot_xs[3 * i + 1] = center_x;\n      dot_xs[3 * i + 2] = rect.right;\n\n      dot_ys[i] = rect.top;\n      dot_ys[3 + i] = center_y;\n      dot_ys[6 + i] = rect.bottom;\n    }\n\n    dot_r = Math.floor((rect.right - rect.left) * 0.18);\n    line_width = Math.floor((rect.right - rect.left) * 0.03);\n  }\n\n  function toggle_dot_focus(dot = 0, on = true): void {\n    if (on) {\n      pattern_dots[dot].classList.add(config.classes.dot_focus);\n    } else {\n      pattern_dots[dot].classList.remove(config.classes.dot_focus);\n    }\n  }\n\n  function toggle_dot_wrong(dot = 0, on = true): void {\n    if (on) {\n      /* could get animated in future (flicker?) */\n      pattern_dots[dot].classList.add(config.classes.dot_wrong);\n    } else {\n      pattern_dots[dot].classList.remove(config.classes.dot_wrong);\n    }\n  }\n\n  function coords_to_dot(x = 0, y = 0): number | null {\n    for (let dot = 0; dot < 9; dot++) {\n      let dx = x - dot_xs[dot];\n      let dy = y - dot_ys[dot];\n\n      if (dx * dx + dy * dy < dot_r * dot_r) {\n        return dot;\n      }\n    }\n    return null;\n  }\n\n  /* ******************************************************* */\n  /* drawing functions */\n\n  function draw_pattern(): void {\n    if (pattern.length <= 1) {\n      return;\n    }\n\n    ctx.beginPath();\n    ctx.moveTo(dot_xs[pattern[0]], dot_ys[pattern[0]]);\n    for (let i = 1; i < pattern.length; i++) {\n      ctx.lineTo(dot_xs[pattern[i]], dot_ys[pattern[i]]);\n    }\n    ctx.stroke();\n  }\n\n  function draw_line_to_mouse(): void {\n    if (pattern.length === 0) {\n      return;\n    }\n\n    ctx.beginPath();\n    let dot_last = pattern[pattern.length - 1];\n    ctx.moveTo(dot_xs[dot_last], dot_ys[dot_last]);\n    ctx.lineTo(mouse_x, mouse_y);\n    ctx.stroke();\n  }\n\n  /* canvas animation step */\n  function draw(): void {\n    ctx.clearRect(0, 0, canvas.offsetWidth, canvas.offsetHeight);\n\n    ctx.lineWidth = line_width;\n    ctx.strokeStyle = line_color;\n    ctx.lineCap = \"round\";\n    ctx.lineJoin = \"round\";\n\n    draw_pattern();\n    if (mousedown) {\n      draw_line_to_mouse();\n    }\n  }\n\n  /* ******************************************************* */\n  /* handling the pattern */\n\n  function reset_pattern(): void {\n    is_dot_used.fill(false);\n    pattern.splice(0, pattern.length);\n\n    for (let i = 0; i < 9; i++) {\n      if (i !== dot_under_mouse) {\n        toggle_dot_focus(i, false);\n      }\n      toggle_dot_wrong(i, false);\n    }\n\n    line_color = config.colors.default;\n\n    /* cancel 'wrong pattern' timeout */\n    if (wrong_timeoutId !== null) {\n      clearTimeout(wrong_timeoutId);\n      wrong_timeoutId = null;\n    }\n  }\n\n  /* wrongenize the pattern */\n  function wrongify_pattern(): void {\n    for (let i = 0; i < 9; i++) {\n      if (is_dot_used[i]) {\n        toggle_dot_wrong(i, true);\n      }\n    }\n    line_color = config.colors.wrong;\n  }\n\n  function pattern_add(dot = 0): void {\n    if (is_dot_used[dot]) {\n      return;\n    }\n\n    if (pattern.length > 0) {\n      /* see if current and previous dot are endpoints of a three_dot_line */\n      let dot_prev = pattern[pattern.length - 1];\n\n      for (let line of config.pattern.three_dot_lines) {\n        if (is_dot_used[line[1]]) continue;\n\n        if (\n          (dot === line[0] && dot_prev === line[2]) ||\n          (dot === line[2] && dot_prev === line[0])\n        ) {\n          is_dot_used[line[1]] = true;\n          pattern.push(line[1]);\n          toggle_dot_focus(line[1], true);\n          break;\n        }\n      }\n    }\n\n    is_dot_used[dot] = true;\n    pattern.push(dot);\n    toggle_dot_focus(dot, true);\n  }\n\n  function pattern_to_number(): number {\n    /* [0, 1, 6, 4] => 1275 */\n    return pattern.reduce((total, cur) => total * 10 + (cur + 1), 0);\n  }\n\n  function pattern_to_link(): string | null {\n    let pattern_code = pattern_to_number();\n\n    for (let { valid_pattern, link } of config.pattern.valid_patterns) {\n      if (pattern_code === valid_pattern) {\n        return link;\n      }\n    }\n    return null;\n  }\n\n  /* ******************************************************* */\n  /* handling mouse */\n\n  function on_mousedown(x = 0, y = 0): void {\n    if (!enabled || mousedown) {\n      return;\n    }\n    mouse_x = x;\n    mouse_y = y;\n\n    dot_under_mouse = coords_to_dot(mouse_x, mouse_y);\n    reset_pattern();\n\n    if (dot_under_mouse !== null) {\n      mousedown = true;\n      pattern_add(dot_under_mouse);\n    }\n\n    window.requestAnimationFrame(draw);\n  }\n\n  function on_mousemove(x = 0, y = 0): void {\n    if (!enabled) {\n      return;\n    }\n    mouse_x = x;\n    mouse_y = y;\n\n    let dot = coords_to_dot(mouse_x, mouse_y);\n\n    /* if mouse leaves dot: shrink */\n    if (dot_under_mouse !== null && dot_under_mouse !== dot) {\n      if (!is_dot_used[dot_under_mouse]) {\n        toggle_dot_focus(dot_under_mouse, false);\n      }\n      dot_under_mouse = null;\n    }\n    /* if mouse enters dot: enlarge */\n    if (dot !== null && dot_under_mouse === null) {\n      toggle_dot_focus(dot, true);\n      if (mousedown && !is_dot_used[dot]) {\n        pattern_add(dot);\n      }\n      dot_under_mouse = dot;\n    }\n\n    if (mousedown) {\n      window.requestAnimationFrame(draw);\n    }\n  }\n\n  function on_mouseup(): void {\n    if (!enabled || !mousedown) {\n      return;\n    }\n\n    mousedown = false;\n\n    /* ignore 'single dot patterns' */\n    if (pattern.length <= 1) {\n      reset_pattern();\n      window.requestAnimationFrame(draw);\n      return;\n    }\n\n    let link = pattern_to_link();\n\n    if (link === null) {\n      wrongify_pattern();\n      wrong_timeoutId = setTimeout(() => {\n        reset_pattern();\n        window.requestAnimationFrame(draw);\n      }, config.pattern.wrong_timeout_ms);\n    } else {\n      /* move to href */\n      window.location.href = link;\n    }\n\n    window.requestAnimationFrame(draw);\n  }\n\n  /* ******************************************************* */\n  /* event listeners */\n\n  canvas.addEventListener(\"mousedown\", function (e) {\n    on_mousedown(e.offsetX, e.offsetY);\n  });\n  canvas.addEventListener(\"touchstart\", function (e) {\n    let touches = e.changedTouches;\n    let touch = touches[touches.length - 1];\n    on_mousedown(touch.clientX, touch.clientY);\n  });\n\n  canvas.addEventListener(\"mousemove\", function (e) {\n    on_mousemove(e.offsetX, e.offsetY);\n  });\n  canvas.addEventListener(\"touchmove\", function (e) {\n    if (!mousedown) {\n      return; /* no need to enlarge dots if not touched */\n    }\n    e.preventDefault();\n    let touches = e.changedTouches;\n    let touch = touches[touches.length - 1];\n    on_mousemove(touch.clientX, touch.clientY);\n  });\n\n  canvas.addEventListener(\"mouseup\", function (e) {\n    on_mouseup();\n  });\n  canvas.addEventListener(\"touchend\", function (e) {\n    on_mouseup();\n  });\n\n  /* ******************************************************* */\n\n  window.addEventListener(\"load\", function (e) {\n    canvas.setAttribute(\"width\", canvas.offsetWidth.toString());\n    canvas.setAttribute(\"height\", canvas.offsetHeight.toString());\n    update_dots();\n    window.requestAnimationFrame(draw);\n  });\n\n  window.addEventListener(\"resize\", function (e) {\n    canvas.setAttribute(\"width\", canvas.offsetWidth.toString());\n    canvas.setAttribute(\"height\", canvas.offsetHeight.toString());\n    update_dots();\n    window.requestAnimationFrame(draw);\n  });\n})();\n"],"names":["canvas","document","getElementById","ctx","getContext","pattern_dot_container","querySelector","pattern_dots","children","config","classes","dot_focus","dot_wrong","nav_small","colors","default","wrong","pattern","three_dot_lines","valid_patterns","valid_pattern","link","wrong_timeout_ms","wrong_timeoutId","dot_xs","dot_ys","dot_r","dot_under_mouse","line_width","line_color","mousedown","mouse_x","mouse_y","is_dot_used","update_dots","rect","getBoundingClientRect","center_x","Math","floor","left","right","center_y","top","bottom","i","toggle_dot_focus","dot","on","classList","add","remove","toggle_dot_wrong","coords_to_dot","x","y","dx","dy","draw","clearRect","offsetWidth","offsetHeight","lineWidth","strokeStyle","lineCap","lineJoin","draw_pattern","length","beginPath","moveTo","lineTo","stroke","draw_line_to_mouse","dot_last","reset_pattern","fill","splice","clearTimeout","pattern_add","dot_prev","line","push","on_mousedown","window","requestAnimationFrame","on_mousemove","on_mouseup","pattern_to_link","pattern_code","reduce","total","cur","wrongify_pattern","setTimeout","location","href","addEventListener","e","offsetX","offsetY","touches","changedTouches","touch","clientX","clientY","preventDefault","setAttribute","toString"],"version":3,"file":"index.072e9fa0.js.map"}